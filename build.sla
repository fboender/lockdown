#
# This is a script containing functions that are used as build rules. You can
# use the Simple Little Automator (https://github.com/fboender/sla.git) to run
# these rules, or you can run them directly in your shell:
#
#   $ bash -c ". build.sla && test"
#

clean () {
    # Remove build artifacts and other junk
    rm -rf __pycache__
    rm -rf build/ dist/
    rm -f lockdown*.spec
    rm -f lockdown-*.tar.gz
    rm -f README.html
}

uninstall () {
    # Remove all lockdown stuff from the host
    rm ~/.local/bin/lockdown*
    rm -rf ~/.config/lockdown
    systemctl --user stop lockdown-daemon 2>/dev/null || true
    rm -f ~/.config/systemd/user/lockdown*
    systemctl --user daemon-reload
}

readme2html () {
    pandoc README.md --metadata title="README" -s -c ~/pandoc.css -o ~/Temp/README.html
}

build_bin () {
    # Build standalone executable
    VERSION="$(grep "^__VERSION__" lockdown.py | cut -d "\"" -f2)"
    pyinstaller --log-level WARN --strip --onefile --clean ./lockdown.py
}

build_release () {
    # Build release file
    build_bin

    VERSION="$(grep "^__VERSION__" lockdown.py | cut -d "\"" -f2)"
    mkdir -p "lockdown-$VERSION/contrib/"
    cp README.md "lockdown-$VERSION"
    cp dist/lockdown "lockdown-$VERSION"
    cp contrib/lockdown-daemon.conf "lockdown-$VERSION/contrib/"
    cp contrib/lockdown-daemon.service "lockdown-$VERSION/contrib/"
    cp contrib/install.sh "lockdown-$VERSION/"
    tar -czf "lockdown-$VERSION.tar.gz" "lockdown-$VERSION/"
    rm -rf "lockdown-$VERSION"
}

build () {
    # Build everything
    build_release
}
